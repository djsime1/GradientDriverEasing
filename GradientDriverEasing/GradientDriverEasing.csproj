<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup> 
    <Authors>djsime1 / Zenuru</Authors>
    <Product>GradientDriverEasing</Product>
    <Description>Adds easing function presets to ValueGradientDriver components</Description>
    <Version>1.1.0</Version>
    <Copyright>$(Authors)</Copyright>
    <AssemblyVersion>$(Version)</AssemblyVersion>
    <AssemblyTitle>$(Product)</AssemblyTitle>
  </PropertyGroup>

  <PropertyGroup> 
    <TargetFramework>net472</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <LangVersion>latest</LangVersion>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <!--This will test for the default Steam installation paths for Resonite on Windows and Linux.-->
  <PropertyGroup Condition="'$(ResonitePath)'==''">
    <ResonitePath Condition="'$(OS)' == 'Windows_NT' and Exists('C:\Program Files (x86)\Steam\steamapps\common\Resonite\')">C:\Program Files (x86)\Steam\steamapps\common\Resonite\</ResonitePath> 
    <ResonitePath Condition="'$(OS)' != 'Windows_NT' and Exists('$(HOME)/.local/share/Steam/steamapps/common/Resonite/')">$(HOME)/.local/share/Steam/steamapps/common/Resonite/</ResonitePath>
    <!--If neither path above exists, you can define your custom Resonite install directory here -->
    <ResonitePath Condition="'$(ResonitePath)'==''">/Custom/Resonite/Install/Path/</ResonitePath>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="ResoniteModLoader">
      <HintPath>$(ResonitePath)Libraries\ResoniteModLoader.dll</HintPath>
    </Reference>
    <Reference Include="0Harmony">
      <HintPath>$(ResonitePath)0Harmony.dll</HintPath>
      <HintPath Condition="Exists('$(ResonitePath)rml_libs\0Harmony.dll')">$(ResonitePath)rml_libs\0Harmony.dll</HintPath>
      <HintPath Condition="Exists('$(ResonitePath)Libraries\0Harmony.dll')">$(ResonitePath)Libraries\0Harmony.dll</HintPath>
    </Reference>
    <Reference Include="FrooxEngine">
      <HintPath>$(ResonitePath)Resonite_Data\Managed\FrooxEngine.dll</HintPath>
    </Reference>
    <Reference Include="Elements.Core">
      <HintPath>$(ResonitePath)Resonite_Data\Managed\Elements.Core.dll</HintPath>
    </Reference>
    <Reference Include="Elements.Assets">
      <HintPath>$(ResonitePath)Resonite_Data\Managed\Elements.Assets.dll</HintPath>
    </Reference>
    <Reference Include="CustomUILib">
      <HintPath Condition="Exists('$(ResonitePath)rml_mods\CustomUILib.dll')">$(ResonitePath)rml_mods\CustomUILib.dll</HintPath>
      <HintPath Condition="Exists('$(ResonitePath)rml_libs\CustomUILib.dll')">$(ResonitePath)rml_libs\CustomUILib.dll</HintPath>
    </Reference>
  </ItemGroup>

  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <Copy SourceFiles="$(OutDir)$(TargetFileName)" DestinationFolder="$(ResonitePath)rml_mods" />
    <Message Text="Copied $(TargetFileName) to $(ResonitePath)rml_mods" Importance="high" />
    <!--Exec Command="C:\Program Files (x86)\Steam\steamapps\common\Resonite\Resonite.exe -Screen -screen-fullscreen 1 -DontAutoOpenCloudHome -CachePath C:\Resonite\Cache -DataPath C:\Resonite\Data -CTAATemporalEdgePower 1.0 -CTAASharpnessEnabled False -CTAAAdaptiveSharpness 0.4 -LoadAssembly Libraries\ResoniteModLoader.dll" /-->
  </Target>
</Project>
